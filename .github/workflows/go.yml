name: Go build and test

on:
  push:
    branches:
      - '**'
  pull_request:
    branches: [ main ]

jobs:

  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, ubuntu-latest, windows-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.17

      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '11'
          check-latest: true

      # Not needed as long as tcr-gui build and test is turned off
      #      - name: Install CGO Libraries
      #        if: ${{ matrix.os == 'ubuntu-latest' }}
      #        run: |
      #          sudo apt-get update
      #          sudo apt-get install golang gcc libgl1-mesa-dev xorg-dev

      - name: Install richgo
        run: |
          go install github.com/kyoh86/richgo@latest

      - name: Test tcr-engine module
        run: |
          cd tcr-engine
          make test

      - name: Send tcr-engine coverage to coveralls.io
        uses: shogo82148/actions-goveralls@v1
        with:
          working-directory: tcr-engine
          path-to-profile: coverage.out
          flag-name: tcr-engine-${{ matrix.os }}
          parallel: true

      - name: Test tcr-cli module
        run: |
          cd tcr-cli
          make test

      - name: Send tcr-cli coverage to coveralls.io
        uses: shogo82148/actions-goveralls@v1
        with:
          working-directory: tcr-cli
          path-to-profile: coverage.out
          flag-name: tcr-cli-${{ matrix.os }}
          parallel: true

      - name: Build tcr-cli application
        run: |
          cd tcr-cli
          go build -v ./...

      # Turn off tcr-gui build and test for now (time consuming and not included in the releases)
      #      - name: Test tcr-gui module
      #        run: |
      #          cd tcr-gui
      #          make test
      #
      #        - name: Send tcr-gui coverage
      #          uses: shogo82148/actions-goveralls@v1
      #          with:
      #            working-directory: tcr-gui
      #            path-to-profile: coverage.out
      #            flag-name: tcr-gui-${{ matrix.os }}
      #            parallel: true
      #
      #      - name: Build tcr-gui application
      #        run: |
      #          cd tcr-gui
      #          go build -v ./...

      # This step must be executed after the test steps so that coverage data is sent to SonarCloud
      # TODO Find a way to retrieve TCR version from git tag history
      - name: SonarCloud Scan
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectVersion=0.12.0

  # notifies coveralls.io that all test jobs are finished.
  finish:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: shogo82148/actions-goveralls@v1
        with:
          parallel-finished: true
